@model QuanLyTruongDaiHoc.Models.tb_Monhoc
@using QuanLyTruongDaiHoc.Models;
<div class="modal fade" id="modalThemMonHoc">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @using (Html.BeginForm("ThemMonHoc", "Monhoc", FormMethod.Post))
            {
                <div class="modal-header">
                    <h4 class="modal-title">Thêm Môn học</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">


                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.MaMonHoc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                <input class="form-control" type="text" required name="Mamh" id="mamh" />
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TenMonHoc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                <input class="form-control" type="text" required name="Tenmh" id="tenmh" />
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ChuyenNganh, "Chuyên Ngành", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @{
                                    var nganh = (List<tb_Nganh>)ViewBag.ChuyenNganh;
                                    <select name="Chuyennganh" required id="chuyennganh" class="form-control">
                                        @{
                                            foreach (var item in nganh)
                                            {
                                                <option value="@item.ID">@item.TenNganh</option>
                                            }
                                        }
                                    </select>
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LoaiMonHoc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                <input type="radio" id="radiolt" name="Loaimon" value="@Init.LyThuyet" checked />
                                <label class="radio-label" for="radiolt" onclick="CheckedRadio(this)">@Init.strLyThuyet</label>
                            </div>
                            <div class="col-md-12">
                                <input type="radio" id="radioth" name="Loaimon" value="@Init.ThucHanh" />
                                <label class="radio-label" for="radioth" onclick="CheckedRadio(this)">@Init.strThucHanh</label>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SoTC, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                <input class="form-control" required type="number" min="0" oninput="CheckNumber(this)" name="Sotc" id="sotc" value="0" />
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SoTiet, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                <input class="form-control" required type="number" min="0" oninput="CheckNumber(this)" name="Sotiet" id="sotiet" value="0" />
                            </div>
                        </div>

                        @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>*@
                    </div>



                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">Thêm</button>
                </div>
            }
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
<script>
    function CheckNumber(input) {
        if (isNaN(input.value) || input.value < 1) {
            input.value = 1;
        }
    }
</script>